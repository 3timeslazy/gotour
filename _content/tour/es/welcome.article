Bienvenida
Bienvenidos al tour Definitivo de Go. Por favor conoce más sobre el tour antes de comenzar.

* Hola, 世界

.play welcome/hello.go

Bienvenidos al tour del [[/][lenguaje de programación Go]].

El tour está dividido en una lista de módulos, a los que puedes
acceder clicando en
[[javascript:highlight(".logo")][Tour de Go Definitivo]] en la esquina superior izquierda de la página.

También puedes ver la tabla de contenidos en cualquier momento clicando en el
You can also view the table of contents at any time by clicking on the [[javascript:highlightAndClick(".nav")][menú]] de la esquina superior derecha de la página.

Durante el tour encontrarás una serie de diapositivas y ejercicios para que los completes.

Puedes navegar por ellos utilizando

- [[javascript:highlight(".prev-page")]["anterior"]] o `PageUp` para ir a la página anterior,

- [[javascript:highlight(".next-page")]["siguiente"]] o `PageDown` para ir a la siguiente página.

El tour es interactivo. Haz clic en el
botón [[javascript:highlightAndClick("#run")][Ejecutar]] ahora
(o pulsar `Shift` + `Enter`) para compilar y ejecutar el programa en
#appengine: un servidor remoto.
tu ordenador.
El resultado será mostrado bajo el código.

Estos programas de ejemplo demuestran diferentes aspectos de Go. Los programas del tour
están diseñados como puntos de partida para tu propia experimentación.

Edita el programa y ejecútalo de nuevo.

Cuando clicas en [[javascript:highlightAndClick("#format")][Formatear]]
(atajo de teclado: `Ctrl` + `Enter`), el texto del editor será formateado utilizando la herramienta
[[/cmd/gofmt/][gofmt]]. Puedes habilitar y deshabilitar el resalte de la sintáxis
clicando en el botón de [[javascript:highlightAndClick(".syntax-checkbox")][sintáxis]].

Cuando estés preparado para continuar, haz click en la [[javascript:highlightAndClick(".next-page")][flecha derecha]] de abajo, o pulsa la tecla `PageDown`.

* Go offline (optional)

This tour is also available as a stand-alone program that you can use without access to the internet. It builds and runs the code samples on your own machine.

To run the tour locally, you'll need to first [[https://go.dev/doc/install][install Go]] and then run:

    go install github.com/ardanlabs/gotour/cmd/tour@latest

This will place a tour binary in your [[https://go.dev/cmd/go/#hdr-GOPATH_and_Modules][GOPATH's]] bin directory. When you run the tour program, it will open a web browser displaying your local version of the tour.

Of course, you can continue to take the tour through this web site.

* The Go Playground

.play welcome/sandbox.go

This tour is built atop the [[https://play.golang.org/][Go Playground]], a web service that runs on [[https://go.dev/][golang.org's]] servers.

The service receives a Go program, compiles, links, and runs the program inside a sandbox, then returns the output.

There are limitations to the programs that can be run in the playground:

In the playground the time begins at 2009-11-10 23:00:00 UTC (determining the significance of this date is an exercise for the reader). This makes it easier to cache programs by giving them deterministic output.
There are also limits on execution time and on CPU and memory usage, and the program cannot access external network hosts.
The playground uses the latest stable release of Go.

Read "[[https://go.dev/blog/playground][Inside the Go Playground]]" to learn more.

* Contribute To The Project

*How* *To* *Get* *Started*

If you are interested in adding more sections or content to the project, please
add an issue to the repo. Just provide a general idea for the content you want
to add and why. If you already have a code example, please share.

[[https://github.com/ardanlabs/gotour][https://github.com/ardanlabs/gotour]]

We will discuss the issue and if approved, you can submit a PR. We would
love more examples and topics under algorithms.

*New* *Languages*

We would also love to have the content translated in different languages.
If you are interested, please add an issue. We can compensate for this
effort.

* About Ardan Labs

*High-Performance* *Software* *Consulting,* *Training,* *Staffing,* *&* *Development*

Whether you are looking for help with Go, Rust, Kubernetes, Terraform, or
Blockchain work, Ardan Labs is your strategic partner for performance-grade
software solutions.

Reach out about corporate training events, open enrollment live training sessions, and on-demand learning options.

Ardan Labs ([[https://www.ardanlabs.com][www.ardanlabs.com]])
- [[mailto:hello@ardanlabs.com][hello@ardanlabs.com]]

To attend any of our high-performance trainings check out this link:

- [[https://www.ardanlabs.com/training][www.ardanlabs.com/training]]

** More Material

All the material for the Go Definitivo class and can be found in this repo

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/README.md][Go Definitivo Repository]]

Check out the design document before you start to get into the right frame of mind
for learning the language.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/go/README.md][Design Document]]

The repo has more topics that won't run in the Go tour, so check them out when
you are done.

- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/tooling/README.md][Testing, Benchmarking, and Profiling]]
- [[https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/packages/README.md][Standard Library Packages]]

** Bloc de notas de Go Definitivo

All this material and more can also be found in the Bloc de notas de Go Definitivo

- [[https://www.ardanlabs.com/ultimate-go-notebook/][Bloc de notas de Go Definitivo]]

** Need Help

Don't hesitate to reach out to Bill Kennedy at Ardan labs if you have problems
or questions

[[mailto:bill@ardanlabs.com][bill@ardanlabs.com]]

** Our Experience

We have taught Go to thousands of developers all around the world since 2014. There
is no other company that has been doing it longer and our material has proven to
help jump-start developers 6 to 12 months ahead of their knowledge of Go. We know
what knowledge developers need in order to be productive and efficient when writing
software in Go.

Our classes are perfect for intermediate-level developers who have at least a few
months to years of experience writing code in Go. Our classes provide a very deep
knowledge of the programming language with a big push on language mechanics, design
philosophies and guidelines. We focus on teaching how to write code with a priority
on consistency, integrity, readability and simplicity. We cover a lot about “if
performance matters” with a focus on mechanical sympathy, data oriented design,
decoupling and writing/debugging production software.

** Our Teacher

William Kennedy is a managing partner at Ardan Labs in Miami, Florida. Ardan Labs
is a high-performance development and training firm working with startups and
fortune 500 companies. He is also a co-author of the book Go in Action, the author
of the blog GoingGo.Net, and a founding member of GoBridge which is working to
increase Go adoption through diversity.

*Video* *Training*

- [[https://education.ardanlabs.com/][Go Definitivo Video]]
- [[http://youtube.ardanlabs.com/][Ardan Labs YouTube Channel]]

*Blog*

- [[https://www.ardanlabs.com/blog/][Ardan Labs Technical Blog]]

*Podcasts*

- [[https://ardanlabs.buzzsprout.com/][Ardan Labs Podcast: On Going Series]]

** More About Go

Go is an open source programming language that makes it easy to build simple,
reliable, and efficient software. Although it borrows ideas from existing languages,
it has a unique and simple nature that make Go programs different in character from
programs written in other languages. It balances the capabilities of a low-level
systems language with some high-level features you see in modern languages today.
This creates a programming environment that allows you to be incredibly productive,
performant and fully in control; in Go, you can write less code and do so much more.

Go is the fusion of performance and productivity wrapped in a language that software
developers can learn, use and understand. Go is not C, yet we have many of the
benefits of C with the benefits of higher level programming languages.

- [[https://henvic.dev/posts/go/][The Ecosystem of the Go Programming Language - Henrique Vicente]]
- [[https://www.infoq.com/presentations/go-concurrency-gc][The Why of Go - Carmen Andoh]]
- [[https://github.com/ardanlabs/gotraining#:~:text=Go%20Ten%20Years%20and%20Climbing][Go Ten Years and Climbing - Rob Pike]]
- [[https://github.com/ardanlabs/gotraining#:~:text=The%20eigenvector%20of%20%22Why%20we%20moved%20from%20language%20X%20to%20language%20Y%22][The eigenvector of "Why we moved from language X to language Y" - Erik Bernhardsson]]
- [[https://talks.golang.org/2012/splash.article][Learn More - Go Team]]
- [[https://github.com/ardanlabs/gotraining#:~:text=Simplicity%20is%20Complicated][Simplicity is Complicated - Rob Pike]]
- [[http://aarti.github.io/2016/08/13/getting-started-in-go][Getting Started In Go - Aarti Parikh]]

** Important Reading

Please check out this page of [[https://github.com/ardanlabs/gotraining/blob/master/reading/README.md][important reading]].
You will find articles and videos around mechanical sympathy, data-oriented design,
Go runtime and optimizations and articles about the history of computing.

** Joining the Go Slack Community

We use a slack channel to share links, code, and examples during the training.
This is free. This is also the same slack community you will use after training to
ask for help and interact with may Go experts around the world in the community.

- Using the following link, fill out your name and email address: [[https://invite.slack.gobridge.org/][https://invite.slack.gobridge.org]]
- Check your email, and follow the link to the slack application.
