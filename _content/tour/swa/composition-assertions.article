Type Conversions And Assertions

Jifunze jinsi ubadilishaji wa aina na uthibitisho unavyofanya kazi.

* Type Conversions And Assertions((Ubunifu wa Aina na Uthibitisho))

- [[https://www.ardanlabs.com/training/individual-on-demand/ultimate-go-bundle/][Watch The Video]]
- Unahitaji Usaidizi wa Kifedha, Tumia  [[https://www.ardanlabs.com/scholarship/][Scholarship Form]]

Ubadilishaji wa aina huruhusu data ya aina moja kubadilisha hadi aina nyingine. Aina
madai hukuruhusu kuuliza swali ikiwa kuna thamani ya aina fulani iliyohifadhiwa
ndani ya kiolesura.

** Ukaguzi wa Code

- *Mfano* *1:* Ubadilishaji wa Interfaces
- *Mfano* *2:*Madai ya Aina ya Runtime
- *Mfano* *3:* Mabadiliko ya Tabia

.play composition/assertions/example1.go
.play composition/assertions/example2.go
.play composition/assertions/example3.go

** Ubadilishaji wa Kiolesura Kinacho Dhahiri

Kama ulivyoona katika mfano wa mwisho, Thamani ya kiolesura cha aina moja inaweza kupitishwa kwa a
aina tofauti za kiolesura ikiwa thamani halisi iliyohifadhiwa ndani ya kiolesura itatekeleza
tabia zote mbili. Hii inaweza kuchukuliwa kuwa ubadilishaji kamili wa kiolesura, lakini ndivyo
bora kufikiria jinsi data halisi inavyohamishwa kupitia miingiliano katika a
hali ya kutengana.

    type Mover interface {
        Move()
    }

    type Locker interface {
        Lock()
        Unlock()
    }

    type MoveLocker interface {
        Mover
        Locker
    }

Kwa kuzingatia miingiliano hii mitatu, ambapo MoveLocker ni muundo wa Mover na Locker.

    type bike struct{}

    func (bike) Move() {
        fmt.Println("Moving the bike")
    }

    func (bike) Lock() {
        fmt.Println("Locking the bike")
    }

    func (bike) Unlock() {
        fmt.Println("Unlocking the bike")
    }

Na kwa kuzingatia baiskeli ya aina hii ya zege inayotekelezea miingiliano yote mitatu. Unaweza kufanya nini?

    var ml MoveLocker
    var m Mover

Unaweza kuunda thamani ya aina ya MoveLocker na Mover hadi hali yake ya sifuri ya thamani.
Hizi ni thamani za kiolesura ambazo hazina thamani kabisa.

    ml = bike{}

Basi unaweza kuunda thamani ya aina ya baiskeli kwa hali yake ya sifuri na kugawa a
nakili kwa kibadilishaji cha MoveLocker ml. Hii inawezekana kwa sababu baiskeli inafanya kazi
tabia zote tatu, na mkusanyaji anaweza kuona kuwa utekelezaji upo.

    m = ml

Kisha unaweza kukabidhi kutofautisha kwa MoveLocker ml kwa kibadilishaji cha Mover m. Hili linawezekana
kwa sababu sitoi thamani ya kiolesura ml lakini thamani halisi iliyohifadhiwa ndani
ya ml ambayo ni thamani ya baiskeli. Mkusanyaji anajua kuwa thamani yoyote halisi iliyohifadhiwa ndani
ya ml lazima pia kutekeleza kiolesura cha Mover.

Jukumu hili hata hivyo si halali.
    ml = m

Pato:

    cannot use m (type Mover) as type MoveLocker in assignment:
        Mover does not implement MoveLocker (missing Lock method)

Huwezi kukabidhi kibadilishaji cha Mover m kwa muundo wa MoverLocker ml kwa sababu
mkusanyaji anaweza tu kuhakikisha kuwa thamani halisi iliyohifadhiwa ndani ya m inajua jinsi ya Kusonga.
Haijui wakati wa kukusanya ikiwa thamani halisi pia inajua jinsi ya Kufunga na Kufungua.

** Type Assertion Mechanics(Aina ya Mitambo ya Madai)

Madai ya aina hukuruhusu kuuliza swali wakati wa kukimbia, je, kuna thamani ya
aina fulani iliyohifadhiwa ndani ya kiolesura. Unaona hilo na syntax ya m.(bike).

    b := m.(bike)
    ml = b

Katika hali hii, unauliza ikiwa kuna thamani ya baiskeli iliyohifadhiwa ndani ya m kwa sasa
kanuni inatekelezwa. Ikiwa kuna, basi variable b inapewa nakala ya baiskeli
thamani iliyohifadhiwa. Kisha nakala inaweza kunakiliwa ndani ya muundo wa kiolesura cha ml.

Ikiwa hakuna thamani ya baiskeli iliyohifadhiwa ndani ya thamani ya kiolesura, basi programu inaogopa.
unataka hii ikiwa kunapaswa kuwa na dhamana ya baiskeli iliyohifadhiwa. Nini kama kuna
nafasi haipo na hiyo ni halali? Kisha unahitaji fomu ya pili ya madai ya aina.

    b, ok := m.(bike)

Katika fomu hii, ikiwa sawa ni kweli, kuna thamani ya baiskeli iliyohifadhiwa ndani ya kiolesura. Kama
sawa ni uongo, basi hakuna na programu haina hofu. Tofauti b hata hivyo
bado ni ya aina ya baiskeli, lakini imewekwa katika hali yake ya thamani ya sifuri.

    func main() {
        mvs := []fmt.Stringer{
            Car{},
            Cloud{},
        }

        for i := 0; i < 10; i++ {
            rn := rand.Intn(2)

            if v, is := mvs[rn].(Cloud); is {
                fmt.Println("Got Lucky:", v)
                continue
            }

            fmt.Println("Got Unlucky")
        }
    }

Katika fomu hii, ikiwa sawa ni kweli, kuna thamani ya baiskeli iliyohifadhiwa ndani ya kiolesura. Kama
sawa ni uongo, basi hakuna na programu haina hofu. Tofauti b hata hivyo
bado ni ya aina ya baiskeli, lakini imewekwa katika hali yake ya thamani ya sifuri.
